{"ts":1340866626724,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n\tНекоторые соглашения: \n\t\t- Формат имени файла: jquery.<название проекта>_<название плагина>[.min].js (всё в нижнем регистре)\n\t\t- Формат имён методов и переменных -- camelCase\t(исключения описаны ниже)\n\t\t- Переменные, которые ссылаются на jQuery-объекты называются с префиксом \"$\", например \"$someVar\"\n\t\n\tВ следующем блоке комментария идёт стандартный комментарий-заголовок для плагина\t\n*/\n\n/*\n\tDemo plugin from project 'Demo Project'\n\n\tDependencies: // Список зависимостей\n\t\t- jQuery x.x.x+ - http://jquery.com/\n*/\n;(function($) { // Стандартная анонимная функция-замыкание, на случай комбинирования с другими скриптами, которые не заканчиваются точкой с запятой перед кодом ставим \";\"\n\n\t/*\n\t\tНазвание плагина, см. комментарий ниже, где создаётся jQuery-плагин с таким методом\n\t*/\n\tvar jqPluginName = 'demoProject_demoPlugin';\n\t\t\n\t/*\n\t\t\"Класс\" плагина\n\t*/\n\tvar demoPlugin = function(element, options) {\n\t/*\n\t\tИнициализация\n\t\t--------------------------------------------------------------------------------------------------\n\t*/\n\t\t// В переменной config храним максимум данных, организовываем иерархически как удобно, локальные переменные -- только очень служебные и временные\t\t\n\t\t// Эта переменная у каждого экземпляра плагина своя\n\t\tvar config = $.extend(true, {}, $.fn.demoProject_demoPlugin.defaults, options);\n\t\n\t\t// Эту переменную удобно использовать как контекст для поиска DOM-элементов\n\t\tconfig.$context = element;\n\t\t\n\t\t// Если это необходимо из соображений производительности -- сохраняем ссылки на выбранные DOM-элементы в переменные, используем контекст для поиска элементов\n\t\tconfig.ui.$clicker = $(config.ui.clicker, config.$context);\n\n\t\t// Кстати:\n\t\t// if (config.ui.$clicker == null) {...}; // проверка, что была попытка выбрать элемент\n\t\t// if (config.ui.$clicker.length) {...}; // проверка, что что-то выбралось\n\n\t/*\n\t\tОбработчики UI\n\t\t--------------------------------------------------------------------------------------------------\n\t*/\t\t\n\t\tconfig.ui.$clicker.click(handleClick);\t\t\n\t\t\n\t/*\n\t\tPrivate-методы\n\t*/\n\t\tfunction handleClick() {\n\t\t\tvar $this = $(this); // Пример локальной переменной\n\t\t\t$this.css({color: 'red'}).fadeOut('slow');\n\t\t\treturn false;\n\t\t}\n\t\n\t/*\n\t\tPublic-методы\n\t\t--------------------------------------------------------------------------------------------------\n\t*/\n\t\t// Для имён public-методов используется UpperCamelCase. this в данном случае -- \"класс\" плагина\n\t\tthis.Toggle = function() {\n\t\t\tconfig.ui.$clicker.slideToggle();\n\t\t}\n\t\t\n\t\t// В data() элемента, к которому был применён плагин, сохраняем ссылку на экземпляр объекта\n\t\tconfig.$context.data(jqPluginName, this);\n\t}\n\t\t\n\t/*\n\t\tСобственно функция-плагин, т.к. добавляется к $.fn должна вызываться на jQuery-объекте ($('#selector').demoProject_demoPlugin(...)), \n\t\tможно добавлять напрямую к $., тогда можно будет вызывать $.demoProject_demoPlugin(...); но и поддержки chaining'а тогда не будет\n\t\n\t\tДля имён плагинов не получится использовать \"неймспейсы, поэтому используется префикс \"project_\" \n\t\thttp://stackoverflow.com/questions/1219635/jquery-plugin-namespacing-functions\n\t*/\n\t$.fn[jqPluginName] = function(options) {\t\t\n\t\treturn this.each(function () {\n\t\t\tvar $this = $(this);\t\t\t\n\t\t\tif (!$this.data(jqPluginName))\n\t\t\t{\n\t\t\t\tnew demoPlugin($this, options);\n\t\t\t}\n\t\t});\t\n\t}\n\t\t\n\t/*\n\t\tДефолтовые настройки плагина\n\t*/\n\t$.fn[jqPluginName].defaults = {\n\t\t$context: null, // Оборачивающий блок, внутри которого работает плагин, удобно использовать в качестве контекста для селекторов\n\t\tui: { // Эти секции группируются по смыслу и могут быть произвольной вложенности\n\t\t\t$clicker: null, // Ссылка на jQuery-объект\n\t\t\tclicker: '.default-clicker', // Селектор для выбора объекта\n\t\t}\t\t\n\t}\n})(jQuery); // Будет работать и при jQuery.noConflict();"]],"start1":0,"start2":0,"length1":0,"length2":3739}]],"length":3739}
